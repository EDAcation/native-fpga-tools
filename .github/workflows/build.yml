name: Build

on:
  workflow_dispatch:
  schedule:
    - cron: "0 1 * * *"

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        arch: [linux-x64, linux-arm64, windows-x64, darwin-x64, darwin-arm64]
        target: [yosys, nextpnr-generic, nextpnr-ice40, nextpnr-ecp5]

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Cache sources
        uses: actions/cache@v4
        with:
          path: oss-cad-suite-build/_sources
          key: cache-sources-${{ matrix.target }}

      - name: Cache build outputs
        uses: actions/cache@v4
        with:
          path: oss-cad-suite-build/_outputs
          key: cache-outputs-${{ matrix.target }}-${{ matrix.arch }}

      - name: Inject targets
        run: cp -r edacation oss-cad-suite-build/

      - name: Build
        run: |
          cd oss-cad-suite-build/
          ./builder.py build --rules=default,edacation --arch=${{ matrix.arch }} --target=${{ matrix.target }}-full

      # Needs to be tar'd because uploaded artifact files do not retain permissions
      - name: Tar build output
        env:
          tooldir: oss-cad-suite-build/_outputs/${{ matrix.arch }}/${{ matrix.target }}-full
        run: |
          cp ${tooldir}/.hash ${tooldir}/${{ matrix.target }}-full/.hash
          tar -C ${tooldir}/${{ matrix.target }}-full -czf ${{ matrix.arch }}-${{ matrix.target }}.tgz .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.arch }}-${{ matrix.target }}
          path: ${{ matrix.arch }}-${{ matrix.target }}.tgz

  package:
    runs-on: ubuntu-latest
    needs: [build]

    env:
      PYTHONUNBUFFERED: "1"

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      # Will download all previous artifacts and place them in individual dirs
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: _tools/
          merge-multiple: true

      - name: Extract artifacts
        run: |
          cd _tools/
          for file in *.tgz; do
            echo "Extracting ${file}..."
            tar -xzf "$file" --one-top-level
            rm "$file"
          done

      - name: Package tools
        run: ./package.py --in-dir=_tools/ --out-dir=_outputs/ --report tools.json

      - name: Get release version
        id: version
        run: echo "version=$(cat tools.json | jq -r '.version')" >> $GITHUB_OUTPUT

      - name: Release tools
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.version.outputs.version }}
          files: |
            _outputs/*
            tools.json
